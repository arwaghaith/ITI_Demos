{
	// Place your STM32F401CC_Drivers workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


"CppGuard": {
	"prefix": "cppgrd",
	"scope": "c, cpp",
	"body": [
	  "#ifndef	 ${TM_FILENAME/(?:^.*\\\\src\\\\)?(\\w+)(?!\\w*$)|(\\W)|(\\w+)$/${1:+_}${1:/upcase}${2:+_}${3:/upcase}${3:+_}/g}",
	  "#define	 ${TM_FILENAME/(?:^.*\\\\src\\\\)?(\\w+)(?!\\w*$)|(\\W)|(\\w+)$/${1:+_}${1:/upcase}${2:+_}${3:/upcase}${3:+_}/g}",
	  "\n#endif /*${TM_FILENAME/(?:^.*\\\\src\\\\)?(\\w+)(?!\\w*$)|(\\W)|(\\w+)$/${1:+_}${1:/upcase}${2:+_}${3:/upcase}${3:+_}/g}*/"
	]
  }

  "hTemplate": {
	"prefix": "htemplate",
	"scope": "c, cpp",
	"body": [
			"/************************************************Includes************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/************************************************Defines*************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/************************************************Types***************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/************************************************APIs****************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
	]
  }


  "CTemplate": {
	"prefix": "ctemplate",
	"scope": "c, cpp",
	"body": [
			"/************************************************Includes************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/************************************************Defines*************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/************************************************Types***************************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/************************************************Variables***********************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/*****************************************Static Functions Prototype*************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
			"/*********************************************APIs Implementation****************************************/"
			"\n"
			"/********************************************************************************************************/"
			"\n\n"
	]
  }	  

}